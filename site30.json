{
    "author": "Paulo Silveira",
    "body": "/n/nSQL é uma linguagem padrão para trabalhar com bancos de dados relacionais. Ela é uma linguagem declarativa e que não necessita de profundos conhecimentos de programação para que alguém possa começar a escrever queries, as consultas e pedidps, que trazem resultados de acordo com o que você está buscando. SQL significa Standard Query Language, literalmente a linguagem padrão para realizar queries. /n/nA linguagem SQL é utilizada de maneira relativamente parecida entre os principais bancos de dados relacionais do mercado: Oracle, MySQL, MariaDB, PostgreSQL, Microsoft SQL Server, entre muitos outros. Cada um tem suas características, sendo o MySQL e o PostgreSQL extremamente populares por possuírem versões gratuitas e de código aberto. /n/nÉ também uma linguagem que muitos profissionais acabam precisando aprender: seja quem usa Excel de forma pesada e acaba migrando as informações para um banco de dados, seja um cientista de dados que usa Python para agregar os dados das diferentes fontes de informações. /n/nSELECT: uma query de consulta a um banco /n/nImagine que você tem uma tabela de banco de dados, que realmente pode ser feito uma analogia com uma planilha de Excel, para guardar as informações das suas notas fiscais: /n/n+----+----------------------------+------------+-------+ /n/n| id | titulo                     | pagamento  | valor | /n/n+----+----------------------------+------------+-------+ /n/n|  1 | canetas                    | 2019-07-05 |   150 | /n/n|  2 | notebook                   | 2019-07-01 |  1200 | /n/n|  3 | macbook                    | 2019-07-02 |  2100 | /n/n|  4 | microfone                  | 2019-07-05 |    90 | /n/n|  5 | matricula alura            | 2019-07-09 |   900 | /n/n|  6 | gasolina reembolso diretor | 2019-06-10 |   200 | /n/n+----+----------------------------+------------+-------+ /n/nSe você quer buscar todas as notas fiscais que tem valores acima de mil reais, a query que você deve rodar é uma que vai selecionar (SELECT) todos os campos (*) onde (WHERE) o valor da nota seja maior que mil (valor > 1000): /n/nSELECT * FROM notas_fiscais WHERE valor > 1000 /n/nE o resultado será algo como: /n/nmysql> SELECT * FROM notas_fiscais WHERE valor > 1000; /n/n+----+----------+------------+-------+ /n/n| id | titulo   | pagamento  | valor | /n/n+----+----------+------------+-------+ /n/n|  2 | notebook | 2019-07-01 |  1200 | /n/n|  3 | macbook  | 2019-07-02 |  2100 | /n/n+----+----------+------------+-------+ /n/n2 rows in set (0.00 sec) /n/nCom você pode ver, é bastante simples e direto. Quase uma sentança escrita em inglês. Esse caso foi no mysql mas essa query é padrão em todos os bancos de dados. /n/nPoderíamos ainda apenas listar todos os campos ordenando pela data de pagamento, usando ORDER BY pagamento: /n/nmysql> SELECT * FROM notas_fiscais ORDER BY pagamento; /n/n+----+----------------------------+------------+-------+ /n/n| id | titulo                     | pagamento  | valor | /n/n+----+----------------------------+------------+-------+ /n/n|  6 | gasolina reembolso diretor | 2019-06-10 |   200 | /n/n|  2 | notebook                   | 2019-07-01 |  1200 | /n/n|  3 | macbook                    | 2019-07-02 |  2100 | /n/n|  1 | canetas                    | 2019-07-05 |   150 | /n/n|  4 | microfone                  | 2019-07-05 |    90 | /n/n|  5 | matricula alura            | 2019-07-09 |   900 | /n/n+----+----------------------------+------------+-------+ /n/n6 rows in set (0.00 sec) /n/nQuais são os principais comandos SQL? /n/nOs principais comandos SQL são: /n/nSELECT: busca linhas em tabelas de acordo com um critério definido dentro da chamada cláusula de WHERE /n/nINSERT: insere novas linhas na tabela. no nosso caso, colocaria novas notas fiscais dado os argumentos que são passados para o INSERT. Por exemplo, no nosso caso: INSERT INTO nf (titulo, pagamento, valor) VALUES 'canetas', '2019-07-15', 150. /n/nUPDATE: atualiza linhas do banco de dados de acordo com um critério de WHERE, como mudar o CPF /n/nDELETE: remove linhas da tabela de acordo com um critério. /n/nHá ainda uma infinidade de subcomandos para fazer buscas melhores e mais elaboradas, como JOIN, LIKE, HAVING e GROUP BY. /n/nNão se assuste! O trabalho básico com tabelas, linhas, colunas, relacionamentos e chaves não demanda um conhecimento extenso de SQL. Ele vai se fazer necessário para otimizar consultas e tomar decisões de como modelar esses dados. /n/nModelagem de banco de dados. /n/nAlém desses comandos, você será exposto a formas de criação de tabelas e de colunas, como CREATE TABLE e ALTER TABLE. A modelagem de banco de dados é a forma que definimos com as tabelas vão armazenar e relacionar os nossos dados, isso é, como estruturar esse relacionamentos para que não fique algo difícil de dar manutenção e validação como acaba sendo com planilhas. /n/nPor exemplo, a tabela acima criamos usando: /n/nCREATE TABLE notas_fiscais ( /n/n    id INT AUTO_INCREMENT, /n/n    titulo VARCHAR(255) NOT NULL, /n/n    pagamento DATE, /n/n    valor DOUBLE, /n/n    PRIMARY KEY (id) /n/n);  /n/nComo posso aprender a trabalhar com SQL? /n/nO ideal é começar trabalhando com uma base bastante simples, com uma única tabela, que tenha o modelo de dados próximo do que você conhece e busca. Aconselho que utilize o MySQL ou o PostreSQL. /n/nNos cursos de SQL da Alura você encontra desde a instalação e modelagem de banco até os primeiros comandos SQL, tanto no MySQL e PostgreSQL quanto no SQLServer e Oracle. E conheça mais dos comandos básicos de SQL nesse outro artigo.",
    "title": "O que é SQL?",
    "type": "article",
    "url": "https://www.alura.com.br/artigos/o-que-e-sql"
}